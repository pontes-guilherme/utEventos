@model Modelo.DAO.Evento

@{
    ViewBag.Title = "Detalhes do Evento";
}

<h2>Detalhes do Evento</h2>

<div>
    <h4>@Html.DisplayFor(model => model.nome)</h4>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            Evento
        </dt>

        <dd>
            @Html.DisplayFor(model => model.nome)
        </dd>

        <dt>
            Importante
        </dt>

        <dd>
            @Html.DisplayFor(model => model.importante)
        </dd>

        <dt>
            Início
        </dt>

        <dd>
            @Html.DisplayFor(model => model.data_inicio)
        </dd>

        <dt>
            Fim
        </dt>

        <dd>
            @Html.DisplayFor(model => model.data_fim)
        </dd>

        <dt>
            Capacidade
        </dt>

        <dd>
            @{
                var cap = Html.DisplayFor(model => model.capacidade).ToString();
                var capInt = 0;
                Int32.TryParse(cap, out capInt);

                if (capInt == 0)
                {
                    cap = "Número de vagas não informada";
                }
            }
            @cap
        </dd>

        @{ 
            if (capInt > 0)
            {
                <dt>
                    Vagas
                </dt>

                <dd>
                    @{var vagas = capInt - Model.Inscricoes.Count();}
                    @vagas
                </dd>
                        }
        }

        <dt>
            Escopo
        </dt>

        <dd>
            @Html.DisplayFor(model => model.escopo)
        </dd>

        <dt>
            Categoria
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Categoria.nome)
        </dd>

        <dt>
            Criado em
        </dt>

        <dd>
            @{
                var data = Html.DisplayFor(model => model.data_criacao);
                var str = "-";
                if (data.ToString().Length > 0)
                {
                    str = data.ToString().Substring(0, 10);
                }
            }
            @str
        </dd>

        <dt>
            Criado por
        </dt>

        <dd>
            @*@Html.DisplayFor(model => model.Usuario.nome)*@
            @{
                var email = Html.DisplayFor(model => model.Usuario.email).ToHtmlString();
                var nome = Html.DisplayFor(model => model.Usuario.nome).ToHtmlString();

            }
            @Html.ActionLink(nome, "Details", "Usuarios", new { id = email + "/" }, null)
        </dd>
    </dl>
</div>
<p>
    @{
        if (DateTime.Compare(Model.data_inicio, DateTime.Now) > 0)
        {
            if (Model.Inscricoes.Count() > 0 && Model.Inscricoes.Any(x => object.Equals(x.Usuario_email, System.Web.HttpContext.Current.Session["email"].ToString())))
            {
                    @Html.ActionLink("Deixa de participar", "SignOut", "Eventoes", new { id = Model.Id }, htmlAttributes: new { @class = "btn btn-default" });
                    @: | 
                }
            else if (Model.Inscricoes.Count() >= Model.capacidade && Model.capacidade > 0)
            {
                //Html.ActionLink("Esgotado", "SignUp", "Eventos", htmlAttributes: new { @class = "btn btn-default" });
                    <input type="button" value="Esgotado" class="btn btn-default" disabled /> 
                    @: |  
                    }
            else
            {
                    @Html.ActionLink("Participar", "SignUp", "Eventoes", new { id = Model.Id }, new { @class = "btn btn-default" });
                    @: | 
                }
        }
        else if (DateTime.Compare(Model.data_fim, DateTime.Now) > 0)
        {
            if (Model.Inscricoes.Count() > 0 && Model.Inscricoes.Any(x => object.Equals(x.Usuario_email, System.Web.HttpContext.Current.Session["email"].ToString()))
                && (Model.Checkins.Count() == 0 || (Model.Checkins.Count() > 0 && !Model.Checkins.Any(x => object.Equals(x.Usuario_email, System.Web.HttpContext.Current.Session["email"].ToString())))) )
            {
                @Html.ActionLink("Check In", "Checkin", "Eventoes", new { id = Model.Id }, htmlAttributes: new { @class = "btn btn-default" });
                @: |
            }
            else if (Model.Inscricoes.Count() == 0 || (Model.Inscricoes.Count() > 0 && Model.Inscricoes.Where(x => object.Equals(x.Usuario_email, System.Web.HttpContext.Current.Session["email"].ToString())) == null))
            {
                //Html.ActionLink("Esgotado", "SignUp", "Eventos", htmlAttributes: new { @class = "btn btn-default" });
                <input type="button" value="Inscrições Encerradas" class="btn btn-default" disabled />
                @: |
            }
            else
            {
                    <input type="button" value="Checked In" class="btn btn-default" disabled />
                    @: |
             }
        }
        else
        {
                @Html.ActionLink("Feedback", "Create", "Feedbacks", new { id = Model.Id },null);
                @: | 
        }


        if (object.Equals(System.Web.HttpContext.Current.Session["tipo"], "Administrador") || object.Equals(System.Web.HttpContext.Current.Session["email"], email))
        {
            @Html.ActionLink("Editar", "Edit", new { id = Model.Id });
            @: |
            @Html.ActionLink("Deletar", "Delete", new { id = Model.Id });
            @: |
        }
    }
    @Html.ActionLink("Voltar à lista de eventos", "Index")
</p>

@{
    if (DateTime.Compare(Model.data_fim, DateTime.Now) <= 0)
    {
        <hr>
        <h3>Feedbacks sobre o Evento</h3>
        <table class="table">
            @if (Model.Feedbacks.Count() == 0)
            {
                <tr>
                    <th>Ainda não existe nenhum feedback para este evento</th>
                </tr>
            }
            else
            {
                foreach (var item in Model.Feedbacks)
                {
                    <tr>
                        <th>
                            Titulo: @Html.DisplayFor(modelItem => item.titulo)
                        </th>
                        <th>
                            @{ 
                                DateTime d = item.data_criacao;
                            }
                                -- @Html.DisplayFor(modelItem => item.Usuario.nome) em @d.ToString("dd/MM/yyyy")
                        </th>
                    </tr>
                    <tr>
                        <td colspan="2">
                            @Html.DisplayFor(modelItem => item.descricao)
                        </td>
                    </tr>
                    <br />
                }
            }
        </table>
    }
}