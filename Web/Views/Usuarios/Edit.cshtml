@model Modelo.DAO.Usuario

@{
    ViewBag.Title = "Alterar Conta";
    if (object.Equals(System.Web.HttpContext.Current.Session["tipo"], "Administrador") || object.Equals(ViewContext.RouteData.Values["id"], System.Web.HttpContext.Current.Session["email"])) {
        <h2>Alterar Conta</h2>

        using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <h4>@System.Web.HttpContext.Current.Session["nome"].</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.email)

                <div class="form-group">
                    @Html.LabelFor(model => model.nome, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.nome, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.nome, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.Label(" Senha", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.senha, new { htmlAttributes = new { @type = "password", @class = "form-control", required = "required" } })
                        @Html.ValidationMessageFor(model => model.senha, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.Label(" Data de Nascimento", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.data_nascimento, new { htmlAttributes = new { @type = "date", @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.data_nascimento, "", new { @class = "text-danger" })
                    </div>
                </div>


                @{if (object.Equals(System.Web.HttpContext.Current.Session["tipo"], "Administrador"))
                   {
                    <div class="form-group">
                        @Html.Label(" Tipo", htmlAttributes: new { @class = "control-label col-md-2" })
                        @{
                            List<SelectListItem> listItems = new List<SelectListItem>();
                            listItems.Add(new SelectListItem
                            {
                                Text = "Estudante",
                                Value = "Estudante",
                                Selected = true
                            });
                            listItems.Add(new SelectListItem
                            {
                                Text = "Administrador",
                                Value = "Administrador"
                            });
                        }
                        <div class="col-md-10">
                            @Html.DropDownListFor(model => model.tipo, listItems, "-- Selecione um tipo --", new { htmlAttributes = new { @type = "date", @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.tipo, "", new { @class = "text-danger" })
                        </div>
                    </div>
                   }
                }

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Editar" class="btn btn-default" />
                    </div>
                </div>
            </div>
        }

        <div>
            @Html.ActionLink("Voltar ao perfil", "Details", new { id = ViewContext.RouteData.Values["id"] + "/" }, null)
        </div>

    }
    else
    {
        @RenderPage("~/Views/Shared/_NotAuthorized.cshtml")
        <div>
            @Html.ActionLink("Voltar ao perfil", "Details", new { id = ViewContext.RouteData.Values["id"] + "/" }, null)
        </div>
    }
}

@section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
}

        @*<div class="form-group">
            @Html.Label(" Nome", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.nome, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                @Html.ValidationMessageFor(model => model.nome, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label(" Email", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })
            </div>
        </div>*@

